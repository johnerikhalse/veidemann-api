syntax = "proto3";

package veidemann.api;
option go_package = "veidemann_api";
option java_package = "no.nb.nna.veidemann.api";
option java_outer_classname = "HarvesterProto";

import "messages.proto";
import "config.proto";
import "google/protobuf/empty.proto";

// Service for communicating with harvester.
service Harvester {
    // Harvest a page
    rpc HarvestPage (HarvestPageRequest) returns (stream HarvestPageReply) {}
}

// A request telling which page to harvest.
message HarvestPageRequest {
    QueuedUri queued_uri = 1;
    CrawlConfig crawl_config = 2;
}

// Response from harvesting a page. Response is a stream where the first object should include uri_count and bytes_downloaded.
// Subsequent objects should only contain a outlink until all outlinks are sent.
message HarvestPageReply {
    // The outlinks found in the harvested page
    QueuedUri outlink = 1;
    // The number of uri's downloaded. The requested uri + embedded resources
    int32 uri_count = 2;
    // Byte count for the resources downloaded. Includes embedded resources
    int64 bytes_downloaded = 3;
}
