syntax = "proto3";

package veidemann.api;
option go_package = "github.com/nlnwa/veidemann-api-go/veidemann_api;veidemann_api";
option java_package = "no.nb.nna.veidemann.api";
option java_outer_classname = "ReportProto";

import "frontier/v1/resources.proto";
import "veidemann_api/messages.proto";

// Service for crawler reports.
service Report {
    // List crawl logs
    rpc ListCrawlLogs (CrawlLogListRequest) returns (CrawlLogListReply) {}
    // List page logs
    rpc ListPageLogs (PageLogListRequest) returns (PageLogListReply) {}
    // List screenshots
    rpc ListScreenshots (ScreenshotListRequest) returns (ScreenshotListReply) {}
    // Execute a query against the database
    rpc ExecuteDbQuery (ExecuteDbQueryRequest) returns (stream ExecuteDbQueryReply) {}
}

message Filter {
    enum Operator {
        EQ = 0;
        NE = 1;
        MATCH = 2;
        LT = 3;
        GT = 4;
    }
    string field_name = 1;
    Operator op = 2;
    string value = 3;
}

message CrawlLogListRequest {
    repeated string warc_id = 1;
    string execution_id = 2;
    repeated Filter filter = 3;
    int32 page_size = 14;
    int32 page = 15;
}

message CrawlLogListReply {
    repeated veidemann.api.frontier.v1.CrawlLog value = 1;
    int64 count = 2;
    int32 page_size = 14;
    int32 page = 15;
}

message PageLogListRequest {
    repeated string warc_id = 1;
    string execution_id = 2;
    repeated Filter filter = 3;
    int32 page_size = 14;
    int32 page = 15;
}

message PageLogListReply {
    repeated veidemann.api.frontier.v1.PageLog value = 1;
    int64 count = 2;
    int32 page_size = 14;
    int32 page = 15;
}

message ScreenshotListRequest {
    repeated string id = 1;
    string execution_id = 2;
    repeated Filter filter = 3;
    bool img_data = 4;
    int32 page_size = 14;
    int32 page = 15;
}

message ScreenshotListReply {
    repeated Screenshot value = 1;
    int64 count = 2;
    int32 page_size = 14;
    int32 page = 15;
}

message ExecuteDbQueryRequest {
    // The query to execute
    string query = 1;
    // Maximum number of rows to return. A limit of -1 indicates no limit. If unset or zero, use default limit.
    int32 limit = 14;
}

message ExecuteDbQueryReply {
    string record = 1;
}
