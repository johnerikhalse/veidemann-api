syntax = "proto3";

package veidemann.api.scopechecker.v1;

import "frontier/v1/resources.proto";
import "commons/v1/resources.proto";

option go_package = "github.com/nlnwa/veidemann-api/go/scopechecker/v1;scopechecker";
option java_multiple_files = true;
option java_package = "no.nb.nna.veidemann.api.scopechecker.v1";
option java_outer_classname = "ScopeChecker";

// Service for URL scope check.
service ScopesCheckerService {
    // Check if URL is in scope for this crawl
    rpc ScopeCheck (veidemann.api.scopechecker.v1.ScopeCheckRequest) returns (veidemann.api.scopechecker.v1.ScopeCheckResponse) {
    }
}

message ScopeCheckRequest {
    // The uri to validate
    veidemann.api.frontier.v1.QueuedUri queued_uri = 1;
    // The Script to evaluate.
    string scope_script = 2;
    // Turn on debug messages
    bool debug = 3;
}

message ScopeCheckResponse {
    enum Evaluation {
        INCLUDE = 0;
        EXCLUDE = 1;
        CRAWLER_TRAP = 2;
    }

    // The outcome of the scope evaluation
    Evaluation evaluation = 1;
    // Error is present if script had errors
    veidemann.api.commons.v1.Error error = 2;
    // If debug is turned on in the request, this field will contain the output
    string debugMsg = 3;
}
